---
title: content_processor.kramdown
---
## Description

This processor converts the content, which is assumed to be in the Markdown super-set format
kramdown, to HTML by using the [kramdown][1] library.

The kramdown format is basically Markdown with some extensions like **automatic header ID
generation**, **fenced code blocks**, **definition lists** and much more. There are a [quick
reference][2] and a detailed [syntax documentation][3] available on the kramdown homepage.

> kramdown is the default markup content processor for webgen as its markup syntax is easy to learn
> and nice to look at. Give it a try!
{:.info}

[1]: http://kramdown.rubyforge.org/
[2]: http://kramdown.rubyforge.org/syntax.html
[3]: http://kramdown.rubyforge.org/quickref.html


## Usage

This processor is intended to be used in the processing pipeline of page files. It is automatically
used by default, if you don't change anything.

Furthermore, the processor can be customized by using the following configuration options:

[content_processor.kramdown.handle_links]
: If "true" (the default), then all link URLs created via kramdown syntax are automatically run
  through the [tag relocatable]. This avoids using this tag explicitly but ensures valid links
  nonetheless.

[content_processor.kramdown.options]
: This configuration option can be used to configure the kramdown library itself. Have a look at the
  [kramdown homepage][1] for available options.

The [link_definitions extension] is automatically used. This allows one to globally define link
names which can be used in any kramdown document later!


## Example

Here is a short sample of a text in kramdown markup:

~~~
<%= context.node.blocks['example'].rstrip %>
~~~

When processed by this processor, the output would look like this:

~~~ html
<%= context.render_block('example').rstrip %>
~~~

--- name:example pipeline:kramdown --------------------------------------------
# This a h1 header
{:#myid}

## Another header

You can just write *your* paragraphs here and
[link][1] them below. This is **nice** format!

> Citations are easy too.
> Really. And you can assign attributes.
{:.information}

* Lists
* aren't
* difficult
* either.

[1]: http://someurl.example.com
